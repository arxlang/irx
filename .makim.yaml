version: 1.0
groups:
  clean:
    targets:
      tmp:
        help: remove build artifacts, compiled files, and cache
        shell: bash
        run: |
          rm -fr build/
          rm -fr dist/
          rm -fr .eggs/
          find . -name '*.egg-info' -exec rm -fr {} +
          find . -name '*.egg' -exec rm -f {} +
          find . -name '*.pyc' -exec rm -f {} +
          find . -name '__pycache__' -exec rm -fr {} +
          find . -name '*.pyo' -exec rm -f {} +
          find . -name '*~' -exec rm -f {} +
          rm -f .coverage
          rm -fr htmlcov/
          rm -fr .pytest_cache

  tests:
    targets:
      linter:
        help: run linter tools
        run: |
          pre-commit install
          pre-commit run --all-files

      unit:
        help: run tests
        args:
          path:
            help: Specify the location of the tests
            type: string
            default: ""
          params:
            help: Specify parameters to be used for tests
            type: string
            default: "-vv"
        run: pytest -s ${{ args.path }} ${{ args.params }}

      ci:
        help: run the sames tests executed on CI
        dependencies:
          - target: tests.unit
          - target: tests.linter

      build:
        help: build the temporary test c file
        run: |
          mkdir -p ./tmp
          cd tmp
          touch test.c
          clang -O0 test.c -o test.bin

      emit-ir:
        help: |
          build llvm-ir from a c code in order to use the result to compare
          with irx result
        run: |
          mkdir -p ./tmp
          cd tmp
          touch test.c
          clang -O0 -emit-llvm -S -Xclang -disable-llvm-passes test.c

      build-from-ir:
        help: Build a binary file from llvm-ir
        args:
          file:
            help: the llvm ir file path
            type: string
            required: true
        run: |
          llc -filetype=obj ${{ args.file }}.ll -o ${{ args.file }}.o
          clang ${{ args.file }}.o -o ${{ args.file }}

  docs:
    targets:
      build:
        help: build documentation
        run: |
          mkdocs build --config-file mkdocs.yaml
          echo "irx.arxlang.org" > ./build/CNAME

      preview:
        help: preview documentation page locally
        run: mkdocs serve --watch docs --config-file mkdocs.yaml

  release:
    vars:
      app: |
        npx --yes \
          -p semantic-release \
          -p conventional-changelog-conventionalcommits \
          -p "@semantic-release/commit-analyzer" \
          -p "@semantic-release/release-notes-generator" \
          -p "@semantic-release/changelog" \
          -p "@semantic-release/exec" \
          -p "@semantic-release/github" \
          -p "@semantic-release/git" \
          -p "@google/semantic-release-replace-plugin" \
          semantic-release

    targets:
      ci:
        help: run semantic release on CI
        run: ${{ vars.app }} --ci

      dry:
        help: run semantic release in dry-run mode
        run: |
          ${{ vars.app }} --dry-run
